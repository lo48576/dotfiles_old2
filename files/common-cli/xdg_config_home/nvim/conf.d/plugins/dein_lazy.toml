# Completion.
[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim") && has("python3")'
on_event = 'InsertEnter'
hook_add = 'call larry_config#dein#deoplete#hook_add()'

# Grep alternative.
[[plugins]]
repo = 'rking/ag.vim'
if = 'executable("ag") == 1'
hook_post_source = 'call larry_config#dein#ag#hook_post_source()'

# Color preview.
[[plugins]]
repo = 'gorodinskiy/vim-coloresque'
on_ft = ['html', 'html5', 'css', 'scss', 'sass', 'less', 'stylus', 'vim']

# Emmet.
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'xhtml', 'css', 'scss', 'html5', 'eruby', 'jsp', 'xml', 'coffee', 'jinja', 'mason', 'liquid', 'haml', 'html.handlebars', 'xslt', 'markdon']
on_cmd = ['Emmet', 'EmmetInstall']
hook_add = 'call larry_config#dein#emmet#hook_add()'

# Enhance increment and decrement.
[[plugins]]
repo = 'nishigori/increment-activator'
on_map = [['inxo', '<Plug>'], ['<C-a>'], ['<C-x>']]
hook_add = 'call larry_config#dein#increment_activator#hook_add()'

# extended % matching for HTML, LaTeX, and many other languages http://www.vim.org/scripts/script.php?script_id=39
[[plugins]]
repo = 'tmhedberg/matchit'
on_map = [['%', 'g%', '[%', ']%'], ['a', 'a%']]

# Simple memo.
[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList', 'MemoGrep']

# Directory tree explorer.
[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTree', 'NERDTreeFromBookmark', 'NERDTreeToggle', 'NERDTreeMirror', 'NERDTreeClose', 'NERDTreeFind', 'NERDTreeCWD']

# Files renamer.
[[plugins]]
repo = 'vim-scripts/renamer.vim'
on_cmd = 'Renamer'

# Rust.
#[[plugins]]
#repo = 'racer-rust/vim-racer'
#if = 'executable("racer") == 1'
#on_ft = 'rust'
#hook_source = '''
#	let g:racer_cmd = 'racer'
#	let g:racer_experimental_completer = 1
#'''

## Required for 'AtsushiM/sass-compile.vim'.
#[[plugins]]
#repo = 'AtsushiM/search-parent.vim'
#on_source = 'AtsushiM/sass-compile.vim'
#
## Sass, SCSS.
#[[plugings]]
#repo = 'AtsushiM/sass-compile.vim'
#depends = 'AtsushiM/search-parent.vim'
#if = 'executable("sass") == 1'
#on_ft = ['scss', 'sass']
#on_cmd = ['SassCompile', 'CompassConfig']
#hook_source = 'call larry_config#dein#sass_compile#hook_source()'

# Run opened files.
[[plugins]]
repo = 'xuhdev/SingleCompile'
on_cmd = ['SCCompile', 'SCCompileRun', 'SCCompileRunAsync', 'SCCompileAF', 'SCCompileRunAF', 'SCCompileRunAsyncAF', 'SCChooseCompiler', 'SCChooseInterpreter', 'SCIsRunningAsync', 'SCTerminateAsync', 'SCViewResult', 'SCViewResultAsync']
hook_source = '''
	let g:SingleCompile_alwayscompile = 0
'''
hook_post_source = 'call larry_config#dein#single_compile#hook_post_source()'

# ctags.
[[plugins]]
repo = 'vim-scripts/taglist.vim'
if = 'executable("ctags")'
on_cmd = 'Tlist'

# PGP.
[[plugins]]
repo = 'jamessan/vim-gnupg'
on_path = '\.\(gpg\|asc\|pgp\)$'
hook_post_source = '''
	" See http://leafcage.hateblo.jp/entry/nebulavim_intro .
	doautocmd GnuPG BufReadCmd,FileReadCmd
'''

# Extends 'j' command.
[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = ['<Plug>(jplus)', '<Plug>(jplus-']
hook_source = '''
	let g:jplus#config = {
				\	'cpp' : {
				\		'right_matchstr_pattern' : '^\s*//\s*\zs.*',
				\	},
				\ }
'''

# LaTeX.
[[plugins]]
repo = 'vim-latex/vim-latex'
on_ft = ['tex', 'plaintex']
on_map = ['<Plug>IMAP_JumpForward', '<Plug>IMAP_JumpBack', '<Plug>IMAP_DeleteAndJumpForward', '<Plug>IMAP_DeleteAndJumpBack']
hook_source = 'call larry_config#dein#vim_latex#hook_source()'

# Run opened files.
[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = [['n', '<leader>r'], ['nxo', '<Plug>(quickrun)']]
on_cmd = 'QuickRun'
hook_source = '''
	let g:quickrun_config = {
				\	'_' : {
				\		'outputter' : 'error',
				\		'outputter/error/success' : 'buffer',
				\		'outputter/error/error' : 'quickfix',
				\		'outputter/buffer/split' : ':rightbelow 8sp',
				\		'outputter/buffer/close_on_empty' : 1,
				\	},
				\ }
'''

# Submode.
[[plugins]]
repo = 'kana/vim-submode'
on_map = [['n', '<C-w>>', '<C-w><', '<C-w>+', '<C-w>-']]
hook_source = '''
	call submode#enter_with('winsize', 'n', '', '<C-w>>', '<C-w>>')
	call submode#enter_with('winsize', 'n', '', '<C-w><', '<C-w><')
	call submode#enter_with('winsize', 'n', '', '<C-w>+', '<C-w>+')
	call submode#enter_with('winsize', 'n', '', '<C-w>-', '<C-w>-')
	call submode#map('winsize', 'n', '', '>', '<C-w>>')
	call submode#map('winsize', 'n', '', '<', '<C-w><')
	call submode#map('winsize', 'n', '', '+', '<C-w>+')
	call submode#map('winsize', 'n', '', '-', '<C-w>-')
'''

# Binary editor.
[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = ['Vinarise', 'VinarisePluginDump']
hook_add = 'let g:vinarise_enable_auto_detect = 1'

# Info pages viewer.
[[plugins]]
repo = 'alx741/vinfo'
on_cmd = ['Vinfo', 'VinfoClean', 'VinfoNext', 'VinfoPrevious']

# Outliner.
[[plugins]]
repo = 'vim-voom/VOoM'
on_cmd = ['Voom', 'VoomToggle', 'Voomhelp', 'Voomexec', 'Voomlog', 'Voomgrep']
hook_source = '''
	let g:voom_ft_modes = {
				\	'markdown' : 'markdown',
				\	'tex' : 'latex',
				\	'asciidoc' : 'asciidoc',
				\ }
'''

# VOoM extra.
[[plugins]]
repo = 'vim-voom/VOoM_extras'
depends = 'vim-voom/VOoM'
on_source = 'VOoM'

# Language server support.
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
#if = 'executable("rls") == 1'
on_ft = 'rust'
#hook_add = ':UpdateRemotePlugins'
hook_add = 'call larry_config#dein#language_client#hook_add()'
hook_source = '''
	let g:LanguageClient_serverCommands = {
		\	'rust': ['rustup', 'run', 'nightly', 'rls'],
		\ }
	" Automatically start language servers.
	let g:LanguageClient_autoStart = 1
'''

# Show function signature and inline doc.
[[plugins]]
repo = 'Shougo/echodoc.vim'
