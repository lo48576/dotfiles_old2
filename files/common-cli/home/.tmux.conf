########################################
# Status line
########################################

# Set version number to user option.
# tmux xx.yy.zz to "xxyyzz"
run "tmux -V | tr -cd '0-9.' | awk -F'.' '{ print ($1*10000 + $2*100 + $3 ) }' | xargs tmux set -qg @tmux-version-int"

#
# Status line global style setting
#

# >=tmux-1.9, foo-{fg,bg,attr} have been deprecated. use status-style and 'set -a' .
if "test $(tmux show -qvg @tmux-version-int) -ge 10900" \
	'set -qg status-style "bg=white" ; set -qga status-style "fg=blue"' \
	'set -qg status-bg white ; set -qg status-fg blue'

#
# Left component of status line
#

# Username.
set -qg status-left "#(whoami)"
# Hostname.
# Highlight hostname if tmux is started over ssh.
if 'test -n "$SSH_CLIENT"' \
	'set -qga status-left "#[bg=green,fg=black]@#H#[default]"' \
	'set -qga status-left "@#H"'
# Sssion name and window number.
set -qga status-left " [#S:#I]"
set -qg status-left-length 160

#
# Right component of status line
#

# Pane title (truncate if over 48 chars).
set -qg status-right "#{=48:pane_title}"
# Load average (1min).
set -qga status-right " #[fg=green,dim]|#[default] load:#(cut -d' ' -f1 /proc/loadavg)#[default]"
# Datetime.
set -qga status-right " [%Y-%m-%d(%a) %H:%M"
# Battery capacity (percentage) if available.
if "test -f /sys/class/power_supply/CMB1/capacity" \
	'set -qga status-right " / #(cat /sys/class/power_supply/CMB1/capacity)%"'
set -qg status-right-length 256

# Use utf8 string for status line.
set -qg status-utf8 on
# Update every 4 sec.
set -qg status-interval 4


########################################
# Key bindings
########################################

#
# Basic bindings
#

# Use vi-style key binding in copy and choice modes.
setw -qg mode-keys vi
# Use vi-style key binding in status line.
set -qg status-keys vi

#
# Prefix key
#

# Set the prefix to `^T`.
unbind C-b
set -qg prefix C-t
# Type `^T` 2 times to send `^T` itself.
bind C-t send-prefix

#
# Windows and panes
#

# Pane selection with vi-like keys.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Put a window into window choice mode.
bind Space choose-window

# Move to adjacent windows with `Ctrl-arrow`.
unbind C-Left
bind -n C-Left prev
unbind C-Right
bind -n C-Right next

# Resize pane with vi-like keys.
# Note that `+`/`-` works diferrently to vim.
# They moves pane border up and down.
bind -r > resize-pane -R
bind -r < resize-pane -L
bind -r + resize-pane -U
bind -r - resize-pane -D

#
# Other
#

# Force reflesh
bind C-l refresh-client

# Reload config
bind r source ~/.tmux.conf

# Following settings is required when >=tmux-1.9 .
# (At tmux-1.9 or newer, current directory of a new window or a new pane is $HOME .)
# Open new window with current directory of current pane.
if "test $(tmux show -qvg @tmux-version-int) -ge 10900" \
	'bind c neww -c "#{pane_current_path}"'
# Create new pane with current directory of current pane.
if "test $(tmux show -qvg @tmux-version-int) -ge 10900" \
	'bind % splitw -h -c "#{pane_current_path}"'
# Create new pane with current directory of current pane.
if "test $(tmux show -qvg @tmux-version-int) -ge 10900" \
	'bind "\"" splitw -v -c "#{pane_current_path}"'

## Open new window with current directory of current pane.
#if "test 1 -eq $(tmux show -vg @tmux-1_9-or-later)" \
#	'bind c neww -c "#{pane_current_path}"'
## Create new pane with current directory of current pane.
#if "test 1 -eq $(tmux show -vg @tmux-1_9-or-later)" \
#	'bind % splitw -h -c "#{pane_current_path}"'
## Create new pane with current directory of current pane.
#if "test 1 -eq $(tmux show -vg @tmux-1_9-or-later)" \
#	'bind "\"" splitw -v -c "#{pane_current_path}"'


########################################
# Common settings
########################################

# Expect UTF-8 sequence to appear in windows.
setw -qg utf8 on
# Disable auto renaming of windows.
setw -qg automatic-rename off
# Enable window title change.
set -qg set-titles on

## Set default terimnal (the default value of TERM environment variable).
## Use `tmux-256color` terminfo if available, `screen-256color` if not.
#if "type -p infocmp >/dev/null && infocmp tmux-256color >/dev/null 2>&1" \
#	'set -g default-terminal "tmux-256color"' \
#	'set -g default-terminal "screen-256color"'
# Use `$TERM` of parent terminal.
# Shell can see `$TMUX` and know existence of tmux session.
set -g default-terminal "$TERM"

# Support 24-bit true colors.
set-option -ga terminal-overrides ",$TERM:Tc"

# Number of buffers (which is used to copy and paste).
set -qg buffer-limit 32
# Number of window history (scrollback buffer).
set -qg history-limit 24000

# Enable altername screen feature.
set -qg alternate-screen on

# Set delay after `Esc` keypress to 0 .
# See http://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen .
set -qsg escape-time 0

# Set NCURSES_NO_UTF8_ACS to 0 if borders are shown as 'qqqqq'...
# You can print borders with `dialog`, e.g. `dialog --msgbox hello 10 40`.
setenv -g NCURSES_NO_UTF8_ACS 0

#
# Bell settings
#

# Ignore bells in windows other than the current window.
set -qg bell-action current
# Turn off visual bell.
set -qg visual-bell off

# Enable aggressive resize
setw -g aggressive-resize on
